{"version":3,"sources":["../../app-es6/services/TradeService.js"],"names":["TradeService","_httpService","HttpService","Promise","resolve","reject","get","then","trades","map","obj","Trade","Date","data","quantidade","valor","catch","err","trade","ConnectionFactory","getConnection","TradeDao","conn","dao","add","Error","getAll","console","log","clear","currentTradeList","all","getWeekTrades","getLastWeekTrades","getTwoWeeksAgoTrades","reduce","resultArray","array","concat","filter","some","JSON","stringify","t","t2"],"mappings":"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","file":"TradeService.js","sourcesContent":["class TradeService {\r\n\r\n    constructor() {\r\n        this._httpService = new HttpService();\r\n    }\r\n\r\n    getWeekTrades() {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpService\r\n                .get('http://localhost:3000/negociacoes/semana')\r\n                .then(trades => {\r\n                    resolve(trades.map((obj) => new Trade(new Date(obj.data), obj.quantidade, obj.valor)))\r\n                })\r\n                .catch(err => reject(err));\r\n        });\r\n    }\r\n\r\n    getLastWeekTrades() {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpService\r\n                .get('http://localhost:3000/negociacoes/anterior')\r\n                .then(trades => {\r\n                    resolve(trades.map((obj) => new Trade(new Date(obj.data), obj.quantidade, obj.valor)))\r\n                })\r\n                .catch(err => reject(err));\r\n        });\r\n    }\r\n\r\n    getTwoWeeksAgoTrades() {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpService\r\n                .get('http://localhost:3000/negociacoes/retrasada')\r\n                .then(trades => {\r\n                    resolve(trades.map((obj) => new Trade(new Date(obj.data), obj.quantidade, obj.valor)))\r\n                })\r\n                .catch(err => reject(err));\r\n        });\r\n    }\r\n\r\n    add(trade) {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(conn => new TradeDao(conn))\r\n            .then(dao => dao.add(trade))\r\n            .then(() => 'Trade created successfully')\r\n            .catch(() => {\r\n                throw new Error('Could not create trade');\r\n            });\r\n    }\r\n\r\n    getAll() {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(conn => new TradeDao(conn))\r\n            .then(dao => dao.getAll())\r\n            .catch(err => {\r\n                console.log(err);\r\n                throw new Error('Could not get trades');\r\n            });\r\n    }\r\n\r\n    clear() {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(conn => new TradeDao(conn))\r\n            .then(dao => dao.clear())\r\n    }\r\n\r\n    import(currentTradeList) {\r\n        return Promise.all([\r\n            this.getWeekTrades(),\r\n            this.getLastWeekTrades(),\r\n            this.getTwoWeeksAgoTrades() \r\n        ])\r\n        .then(trades =>\r\n            trades\r\n                .reduce((resultArray, array) => resultArray.concat(array), [])\r\n                .filter(t =>\r\n                !currentTradeList.some(t2 =>\r\n                    JSON.stringify(t) == JSON.stringify(t2)))\r\n        )\r\n        .catch(err => {\r\n            console.log(`Error: ${err}`);\r\n            throw new Error('Could not get trades from server');\r\n        });\r\n    }\r\n}"]}