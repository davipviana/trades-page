{"version":3,"sources":["../../app-es6/controllers/TradeController.js"],"names":["TradeController","$","document","querySelector","bind","_inputDate","_inputAmount","_inputValue","_tradeList","Bind","TradeList","TradeListView","_message","Message","MessageView","_tradeService","TradeService","_init","getAll","then","trades","forEach","add","t","catch","text","setInterval","import","event","preventDefault","newTrade","_createNewTrade","message","_clearForm","err","clear","Trade","DateHelper","textToDate","value","parseInt","parseFloat","focus"],"mappings":"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","file":"TradeController.js","sourcesContent":["class TradeController {\r\n\r\n    constructor() {\r\n        let $ = document.querySelector.bind(document);\r\n        this._inputDate = $('#date');\r\n        this._inputAmount = $('#amount');\r\n        this._inputValue = $('#value');\r\n\r\n        this._tradeList = new Bind(\r\n            new TradeList(),\r\n            new TradeListView($('#tradeListView')),\r\n            'add', 'clear'\r\n        );\r\n\r\n        this._message = new Bind(\r\n            new Message(),\r\n            new MessageView($('#messageView')),\r\n            'text'\r\n        );\r\n\r\n        this._tradeService = new TradeService();\r\n\r\n        this._init();\r\n    }\r\n\r\n    _init() {\r\n        this._tradeService\r\n            .getAll()\r\n            .then(trades => trades.forEach(t => this._tradeList.add(t)))\r\n            .catch(() => this._message.text = \"Could not get trades\");\r\n\r\n        setInterval(() => {\r\n            this.import();\r\n        }, 5000);\r\n    }\r\n\r\n    add(event) {\r\n        event.preventDefault();\r\n\r\n        let newTrade = this._createNewTrade();\r\n        this._tradeService\r\n            .add(newTrade)\r\n            .then(message => {\r\n                this._tradeList.add(newTrade);\r\n                this._message.text = message;\r\n                this._clearForm();\r\n            })\r\n            .catch(err => this._message.text = err);\r\n    }\r\n\r\n    import() {\r\n        this._tradeService\r\n            .import(this._tradeList.trades)\r\n            .then(trades => {\r\n                trades.forEach(t => this._tradeList.add(t));\r\n                this._message.text = \"Trades imported successfully\";\r\n            })\r\n            .catch(err => this._message.text = \"Could not get trades from server\");\r\n    }\r\n\r\n    clear() {\r\n        this._tradeService\r\n            .clear()\r\n            .then(() => {\r\n                this._message.text = \"All trades removed successfully\";\r\n                this._tradeList.clear();\r\n            })\r\n            .catch(e => this._message.text = \"Could not remove all trades\");\r\n    }\r\n\r\n    _createNewTrade() {\r\n        return new Trade(\r\n            DateHelper.textToDate(this._inputDate.value),\r\n            parseInt(this._inputAmount.value),\r\n            parseFloat(this._inputValue.value)\r\n        )\r\n    }\r\n\r\n    _clearForm() {\r\n        this._inputDate.value = '';\r\n        this._inputAmount.value = 1;\r\n        this._inputValue.value = 0;\r\n\r\n        this._inputDate.focus();\r\n    }\r\n}"]}